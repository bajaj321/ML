% multiple linear regression
% type load hald in command window
close all
clear all
load hald
x=ingredients;
y=heat;
%y=m*x----> Calulate the slope mamually
% First method is Pseudo-inverse
m1=x\y;
x1 = [ones(length(x),1) x];
% find the bias
b0=mean(y)-m1(1,1)*mean(x(:,1))-m1(2,1)*mean(x(:,2))-m1(3,1)*mean(x(:,3))-
m1(4,1)*mean(x(:,4));
y2=b0+m1(1,1)*x1(:,2)+m1(2,1)*x1(:,3)+m1(3,1)*x1(:,4)+m1(4,1)*x1(:,5);
plot(y,'r','LineWidth',3),hold on,plot(y2,'g',"LineWidth",3);
axis tight
legend(["Acutal Label(Heat)" "Model"])
title("Model using Psudeo-inverse")
xlabel("Ingridents")
ylabel("Heat")
% calculate the slope using matlab inbuilt function
c=fitlm(x,y);
y1=62.405+1.5511*x(:,1)+0.51017*x(:,2)+0.10191*x(:,3)-0.14406*x(:,4);
figure,plot(y,'r','LineWidth',3),hold on,plot(y1,'g',"LineWidth",3);
legend(["Acutal Label(HEat)" "Model"])
title("Model using MATLAB inbuilt function")
axis tight
xlabel("Ingridents")
ylabel("Heat")
% calculate the slope using SVD --> Singular value decomposition
[u,s,v]=svd(x,'econ');
m2=v*inv(s)*u'*y;
b1=mean(y)-m2(1,1)*mean(x(:,1))-m2(2,1)*mean(x(:,2))-m2(3,1)*mean(x(:,3))-
m2(4,1)*mean(x(:,4));
y3=b1+m2(1,1)*x1(:,2)+m2(2,1)*x1(:,3)+m2(3,1)*x1(:,4)+m2(4,1)*x1(:,5);
figure,plot(y,'r','LineWidth',3),hold on,plot(y2,'g',"LineWidth",3);
title("Model using SVD")
axis tight
xlabel("Ingridents")
ylabel("Heat")
% errors between different models
m_In_error=norm(y-y1,inf); % MATLAB inbuilt function error
p_err=norm(y-y2,inf);
svd_err=norm(y-y3,inf);
svd_err1=norm(y-y3,2);
svd_err2=norm(y-y3,1);
c1=[21 31 34 1;56 33 89 2;51 41 19 3;108 21 39 53];
p1=predict(c,c1');
c2=[[21 31 34 1;56 33 89 2;51 41 19 3;108 21 39 53] p1];
m3=c1\p1;
y4=x1([1:4],1)+c1(:,1)*m3(1,1)+c1(:,2)*m3(2,1)+c1(:,3)*m3(3,1)+c1(:,4)*m3(4,1
);
figure,plot(p1,'r','LineWidth',3),hold on,plot(y4,'g',"LineWidth",3);
legend(["Actual output" "Estimated output"])
pred_error=norm(p1-y4,2);
